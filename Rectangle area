223. Rectangle Area
Medium

1185

1295

Add to List

Share
Given the coordinates of two rectilinear rectangles in a 2D plane, return the total area covered by the two rectangles.

The first rectangle is defined by its bottom-left corner (ax1, ay1) and its top-right corner (ax2, ay2).

The second rectangle is defined by its bottom-left corner (bx1, by1) and its top-right corner (bx2, by2).

 

Example 1:

Rectangle Area
Input: ax1 = -3, ay1 = 0, ax2 = 3, ay2 = 4, bx1 = 0, by1 = -1, bx2 = 9, by2 = 2
Output: 45
Example 2:

Input: ax1 = -2, ay1 = -2, ax2 = 2, ay2 = 2, bx1 = -2, by1 = -2, bx2 = 2, by2 = 2
Output: 16
 

Constraints:

-104 <= ax1 <= ax2 <= 104
-104 <= ay1 <= ay2 <= 104
-104 <= bx1 <= bx2 <= 104
-104 <= by1 <= by2 <= 104


Approach;
1)Find the area of individual rectangles
2)Find if there is any intersection
3)To find we calculate difference(max of left end points and min of right end points)
4)Similarly difference(max of bottom end points and min of top end points)
5)Then subtract the intersected area from original area sum

Code

class Solution {
public:
    int computeArea(int ax1, int ay1, int ax2, int ay2, int cx1, int cy1, int cx2, int cy2) {
        int a1=ax2-ax1;
        int a2=ay2-ay1;
        int c1=cx2-cx1;
        int c2=cy2-cy1;
        int over1=max(min(ax2,cx2)-max(ax1,cx1),0);
        int over2=max(min(ay2,cy2)-max(ay1,cy1),0);
        int over=over1*over2;
        return (a1*a2)+(c1*c2)-over;
    }
};
